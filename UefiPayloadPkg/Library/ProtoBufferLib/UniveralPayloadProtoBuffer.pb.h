/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_UNIVERALPAYLOADPROTOBUFFER_PB_H_INCLUDED
#define PB_UNIVERALPAYLOADPROTOBUFFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO { 
    int32_t UseMmio; 
    int32_t RegisterStride; 
    int32_t BaudRate; 
    int64_t RegisterBase; 
    pb_callback_t RawBytes; 
} UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_init_default {0, 0, 0, 0, {{NULL}, NULL}}
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_init_zero {0, 0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_UseMmio_tag 1
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_RegisterStride_tag 2
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_BaudRate_tag 3
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_RegisterBase_tag 4
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_RawBytes_tag 5

/* Struct field encoding specification for nanopb */
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    UseMmio,           1) \
X(a, STATIC,   REQUIRED, INT32,    RegisterStride,    2) \
X(a, STATIC,   REQUIRED, INT32,    BaudRate,          3) \
X(a, STATIC,   REQUIRED, INT64,    RegisterBase,      4) \
X(a, CALLBACK, OPTIONAL, BYTES,    RawBytes,          5)
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_CALLBACK pb_default_field_callback
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_DEFAULT NULL

extern const pb_msgdesc_t UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_fields &UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_msg

/* Maximum encoded size of messages (where known) */
/* UNIVERSAL_PAYLOAD_SERIAL_PORT_INFO_PROTO_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
